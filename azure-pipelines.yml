pool: 
  vmImage: 'windows-2019'

pr: none

variables:
  - group: vmusers
  - name: 'major'
    value: '1'
  - name: 'minor'
    value: '2'
  - name: 'requiredModules'
    value: 'GuestConfiguration' 
  - name: 'linuxConfigName'
    value: 'firewalldenabled'
  - name: 'windowsConfigName'
    value: 'windowsfirewallenabled'
  - name: 'resourcegroup'
    value: 'contosodev-rfc_customguestconfig'

trigger:
  branches:
    include:
    - master
    - dev
  paths:
    exclude:
    - README.md
    - LICENSE
    - .gitignore
    - .github/*

steps:
- task: PowerShell@2
  inputs:
    targetType: inline
    pwsh: 'true'
    script: |
      
      # Install required modules from PowerShell Gallery
      Install-Module -Name $(requiredModules),PSScriptAnalyzer -Repository 'PSGallery' -Scope 'CurrentUser' -Verbose -Force
      
  displayName: 'Setup/validate PowerShell Core environment'

- task: PowerShell@2
  inputs:
    targetType: inline
    pwsh: 'false'
    script: |
      
      # Install required modules from PowerShell Gallery
      Install-Module -Name $(requiredModules) -Repository 'PSGallery' -Scope 'CurrentUser' -Verbose -Force
      
  displayName: 'Setup/validate Windows PowerShell environment'

- task: PowerShell@2
  inputs:
    targetType: inline
    pwsh: 'true'
    script: |
      
      # Lint PowerShell scripts
      Invoke-ScriptAnalyzer -Path '$(System.DefaultWorkingDirectory)\guestConfiguration\' -IncludeDefaultRules -Recurse -Severity Error -ReportSummary -EnableExit

  displayName: 'Lint PowerShell scripts in Guest Configuration content'

- task: PowerShell@2
  inputs:
    targetType: inline
    pwsh: 'false'
    script: |

      # Compile DSC MOF files
      
        # Linux configuration
        . $(System.DefaultWorkingDirectory)\guestConfiguration\Linux\$(linuxConfigName).ps1
        $(linuxConfigName) -out '$(System.DefaultWorkingDirectory)\guestConfiguration\Linux'

        # Windows configuration
        . $(System.DefaultWorkingDirectory)\guestConfiguration\Windows\$(windowsConfigName).ps1
        $(windowsConfigName) -out '$(System.DefaultWorkingDirectory)\guestConfiguration\Windows'
      
  displayName: 'Compile DSC MOF files'

- task: PowerShell@2
  inputs:
    targetType: inline
    pwsh: 'true'
    script: |

      # Create artifacts folder
      New-Item -Path '$(System.DefaultWorkingDirectory)\artifacts\' -Type Directory
      
      # Create artifacts
      
        # New guest configuration package for Linux
        New-GuestConfigurationPackage -Name '$(linuxConfigName)' `
        -Configuration '$(System.DefaultWorkingDirectory)\guestConfiguration\Linux\$(linuxConfigName).mof' `
        -FilesToInclude '$(System.DefaultWorkingDirectory)\guestConfiguration\Linux\InSpecProfiles' `
        -DestinationPath '$(System.DefaultWorkingDirectory)\artifacts\' `
        -Verbose -ErrorAction Ignore

        # New guest configuration package for Windows
        New-GuestConfigurationPackage -Name '$(windowsConfigName)' `
        -Configuration '$(System.DefaultWorkingDirectory)\guestConfiguration\Windows\$(windowsConfigName).mof' `
        -DestinationPath '$(System.DefaultWorkingDirectory)\artifacts\' `
        -Verbose -ErrorAction Ignore

      # Confirm output
      Test-Path -Path '$(System.DefaultWorkingDirectory)\artifacts\$(linuxConfigName).zip' -Verbose
      Test-Path -Path '$(System.DefaultWorkingDirectory)\artifacts\$(windowsConfigName).zip' -Verbose
  
  continueOnError: 'true'
  displayName: 'Create content artifacts'

- task: PowerShell@2
  inputs:
    targetType: inline
    pwsh: 'true'
    script: |

      # Compress artifacts
      
        # Compress package for Linux
        Compress-Archive -Path '$(System.DefaultWorkingDirectory)\artifacts\firewalldenabled\unzippedPackage' `
          -DestinationPath '$(System.DefaultWorkingDirectory)\artifacts\firewalldenabled.zip' `
          -Verbose

        # Compress package for Windows
        Compress-Archive -Path '$(System.DefaultWorkingDirectory)\artifacts\windowsfirewallenabled\unzippedPackage' `
          -DestinationPath '$(System.DefaultWorkingDirectory)\artifacts\windowsfirewallenabled.zip' `
          -Verbose

  displayName: '[TEMPORARY WORKAROUND] Compress file archives'
